import asyncio
import logging

from aiogram import Bot, types
from aiogram.utils import executor
from aiogram.utils.emoji import emojize
from aiogram.dispatcher import Dispatcher
from aiogram.types.message import ContentType
from aiogram.utils.markdown import text, bold, italic, code, pre
from aiogram.types import ParseMode, InputMediaPhoto, InputMediaVideo, ChatActions


from config import TOKEN
import keyboards as kb

bot = Bot(token=TOKEN)
dp = Dispatcher(bot)


python = 'https://sun9-48.userapi.com/impg/vsAJ7_aFnIxuke26MduWuhMh0twgxr9BOtiSxg/mnGX4J0GhB4.jpg?size=1200x675&quality=96&proxy=1&sign=97ed1ffe5e5fc43a348406da36a708f8&type=album'


# –ö–æ–º–∞–Ω–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏—è, –ø–µ—Ä–≤–æ–µ —á—Ç–æ –ø–æ–ª—É—á–∞–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø—Ä–∏ –Ω–∞–∂—Ç–∏–µ –Ω–∞ –∫–Ω–æ–ø–∫—É —Å—Ç–∞—Ä—Ç –≤ –Ω–∞—á–∞–ª–µ –¥–∏–∞–ª–æ–≥–∞
@dp.message_handler(commands=['start'])
async def process_start_command(message: types.Message):
    await message.reply('–ü—Ä–∏–≤–µ—Ç!', reply_markup=kb.greet_kb)


# –∫–æ–º–∞–Ω–¥–∞ –ø–æ–º–æ—â–∏, –≤—ã–≤–æ–¥–∏—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ –±–æ—Ç–∞
@dp.message_handler(commands=['help'])
async def process_help_command(message: types.Message):
    msg = text(bold('–Ø –º–æ–≥—É –æ—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ —Å–ª–µ–¥—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã:'),
               '/voice', '/photo', '/group', '/note', '/file, /testpre', sep='\n')
    await message.reply(msg, parse_mode=ParseMode.MARKDOWN)


# –∫–æ–º–∞–Ω–¥—ã –≤—ã–∑—ã–≤–∞—é—â–∏–µ –∫–Ω–æ–ø–∫–∏...–≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –ø–æ–Ω–∏–º–∞–Ω–∏—è..
@dp.message_handler(commands=['hi6'])
async def process_hi6_command(message: types.Message):
    await message.reply("–®–µ—Å—Ç–æ–µ - –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∏ –≥–µ–æ–ª–æ–∫–∞—Ü–∏—é\n"
                        "–≠—Ç–∏ –¥–≤–µ –∫–Ω–æ–ø–∫–∏ –Ω–µ –∑–∞–≤–∏—Å—è—Ç –¥—Ä—É–≥ –æ—Ç –¥—Ä—É–≥–∞",
                        reply_markup=kb.markup_request)


# –ö–æ–º–∞–Ω–¥–∞ –∫–æ—Ç–æ—Ä–∞—è –º–æ–∂–µ—Ç –≤—ã–≤–æ–¥–∏—Ç—å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π –Ω–∞–±–æ—Ä —Ñ–æ—Ç–æ –∏–ª–∏ –¥—Ä—É–≥–∏—Ö –º–µ–¥–∏–∞ —Ñ–∞–π–ª–æ–≤ (–ø—Ä–∏ –º–æ–¥–∏—Ñ–∏–∫–∞—Ü–∏–∏ –µ–µ), –Ω–æ –Ω—É–∂–Ω–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å –ë–î –∏ –ø—É—Ç—è–º–∏
@dp.message_handler(commands=['photo'])
async def process_photo_command(message: types.Message):
    caption = '–≠—Ç–æ –ø–∏—Ç–æ–Ω, —è–∑—ã–∫ –Ω–∞ –∫–æ—Ç–æ—Ä–æ–º —è –Ω–∞–ø–∏—Å–∞–Ω! :eyes:'
    await bot.send_photo(message.from_user.id, python,
                         caption=emojize(caption),
                         reply_to_message_id=message.message_id)


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–∞, –ø–æ–º–µ—â–∞–µ—Ç—Å—è –≤ —Å–∞–º–æ–º –∫–æ–Ω—Ü–µ, –∏–±–æ —è –µ—â–µ –Ω–µ –¥–æ–ø–µ—Ä –¥–æ –∫–æ–Ω—Ü–∞, —Ä–µ–∞–≥–∏—Ä—É–µ—Ç –Ω–∞ –≤–≤–æ–¥ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@dp.message_handler(content_types=['text'])
async def unknown_message(msg: types.Message):
    # –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç —á—Ç–æ —Ç–æ –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ —Å–ª–µ–≤–∞
    if msg.text == ('–ü—Ä–∏–≤–µ—Ç! üëã') or msg.text == ('–ø—Ä–∏–≤–µ—Ç') or msg.text == ('–ü—Ä–∏–≤–µ—Ç'):
        # –ë–æ—Ç –µ–º—É –æ—Ç–≤–µ—á–∞–µ—Ç —ç—Ç—É —Ñ—Ä–∞–∑—É
        message_text = text(bold('–ú–µ–Ω—è –∑–æ–≤—É—Ç –ü–∏—Ç–æ–Ω–∞—Ç–æ—Ä! –ò –¥–∞, —É –º–æ–µ–≥–æ —Å–æ–∑–¥–∞—Ç–µ–ª—è –ø–ª–æ—Ö–æ —Å —Ñ–∞–Ω—Ç–∞–∑–∏–µ–π, –Ω–æ —Ä–æ–¥–∏—Ç–µ–ª–µ–π –º—ã –Ω–µ –≤—ã–±–∏—Ä–∞–µ–º! –í–æ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥!'),
                            '/voice', '/photo', '/group', '/note', '/file', sep='\n')
        await msg.reply(message_text, parse_mode=ParseMode.MARKDOWN)
    # –í —Å–ª—É—á–∞–µ –µ—Å–ª–∏ —Ç–æ —á—Ç–æ –ø–∏—à–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –ø–æ–ø–∞–¥–∞–µ—Ç –Ω–∏ –ø–æ–¥ –æ–¥–∏–Ω –≤–∞—Ä–∏–∞–Ω—Ç
    else:
        message_text = text(emojize('–Ø –Ω–µ –∑–Ω–∞—é, —á—Ç–æ —Å —ç—Ç–∏–º –¥–µ–ª–∞—Ç—å :astonished:'),
                            italic('\n–Ø –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–æ–º–Ω—é,'), '—á—Ç–æ –µ—Å—Ç—å',
                            code('–∫–æ–º–∞–Ω–¥–∞'), '/help') # –ë–æ—Ç –æ—Ç–≤–µ—Ç–∏—Ç –≤–æ—Ç —ç—Ç–æ
        await msg.reply(message_text, parse_mode=ParseMode.MARKDOWN)


if __name__ == '__main__':
    executor.start_polling(dp)